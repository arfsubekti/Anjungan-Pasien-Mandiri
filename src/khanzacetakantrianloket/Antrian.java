/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khanzacetakantrianloket;

import fungsi.akses;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Timer;

/**
 *
 * @author windiartonugroho
 */
public class Antrian extends javax.swing.JFrame {
    private final Connection koneksi=koneksiDB.condb();
    private final validasi Valid=new validasi();
    private final sekuel Sequel=new sekuel();
    private PreparedStatement ps;
    private ResultSet rs;
    /**
     * Creates new form frmUtama
     */
    public Antrian() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        
        jam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        BtnCetak2 = new widget.Button();
        BtnCetak3 = new widget.Button();
        LabelTanggal = new widget.Label();
        LabelNomor = new widget.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ANTRIAN LOKET");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBackground(new java.awt.Color(255, 255, 255));
        internalFrame1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnCetak2.setForeground(new java.awt.Color(15, 81, 137));
        BtnCetak2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/tombolatm.png"))); // NOI18N
        BtnCetak2.setText("CETAK");
        BtnCetak2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        BtnCetak2.setGlassColor(new java.awt.Color(255, 255, 255));
        BtnCetak2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BtnCetak2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        BtnCetak2.setIconTextGap(25);
        BtnCetak2.setMaximumSize(new java.awt.Dimension(429, 81));
        BtnCetak2.setMinimumSize(new java.awt.Dimension(429, 81));
        BtnCetak2.setPreferredSize(new java.awt.Dimension(158, 125));
        BtnCetak2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCetak2ActionPerformed(evt);
            }
        });
        internalFrame1.add(BtnCetak2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 420, 100));

        BtnCetak3.setForeground(new java.awt.Color(15, 81, 137));
        BtnCetak3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/tombolatm - kanan.png"))); // NOI18N
        BtnCetak3.setText("KEMBALI");
        BtnCetak3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        BtnCetak3.setGlassColor(new java.awt.Color(255, 255, 255));
        BtnCetak3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BtnCetak3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        BtnCetak3.setIconTextGap(50);
        BtnCetak3.setMaximumSize(new java.awt.Dimension(429, 81));
        BtnCetak3.setMinimumSize(new java.awt.Dimension(429, 81));
        BtnCetak3.setPreferredSize(new java.awt.Dimension(158, 125));
        BtnCetak3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCetak3ActionPerformed(evt);
            }
        });
        internalFrame1.add(BtnCetak3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, 350, 100));

        LabelTanggal.setForeground(new java.awt.Color(15, 81, 137));
        LabelTanggal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTanggal.setText("Antrian Loket Pendaftaran Tanggal :");
        LabelTanggal.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        internalFrame1.add(LabelTanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 690, 80));

        LabelNomor.setBackground(new java.awt.Color(255, 255, 255));
        LabelNomor.setForeground(new java.awt.Color(15, 81, 137));
        LabelNomor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelNomor.setText("001");
        LabelNomor.setFont(new java.awt.Font("Trebuchet MS", 1, 200)); // NOI18N
        internalFrame1.add(LabelNomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 530, 210));

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        getAccessibleContext().setAccessibleName("ANJUNGAN PASIEN MANDIRI");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void BtnCetak2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCetak2ActionPerformed
        if(Sequel.menyimpantf("antriloketcetak","current_date(),current_time(),'"+LabelNomor.getText()+"'","Nomor Antrian")==true){
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Map<String, Object> param = new HashMap<>();
            param.put("namars",akses.getnamars());
            param.put("alamatrs",akses.getalamatrs());
            param.put("kotars",akses.getkabupatenrs());
            param.put("propinsirs",akses.getpropinsirs());
            param.put("kontakrs",akses.getkontakrs());
            param.put("emailrs",akses.getemailrs());
            Valid.MyReportqry("rptAntriLoket.jasper","report","::[ Antrian Loket ]::",
                   "select date_format(antriloketcetak.tanggal,'%d-%m-%Y') as tanggal,antriloketcetak.nomor,antriloketcetak.jam from antriloketcetak where antriloketcetak.tanggal=current_date and antriloketcetak.nomor='"+LabelNomor.getText()+"' ",param);
            this.setCursor(Cursor.getDefaultCursor());
            autonomer();
        }else{
            autonomer();
            if(Sequel.menyimpantf("antriloketcetak","current_date(),current_time(),'"+LabelNomor.getText()+"'","Nomor Antrian")==true){
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Map<String, Object> param = new HashMap<>();
                param.put("namars",akses.getnamars());
                param.put("alamatrs",akses.getalamatrs());
                param.put("kotars",akses.getkabupatenrs());
                param.put("propinsirs",akses.getpropinsirs());
                param.put("kontakrs",akses.getkontakrs());
                param.put("emailrs",akses.getemailrs());
                Valid.MyReportqry("rptAntriLoket.jasper","report","::[ Antrian Loket ]::",
                       "select date_format(antriloketcetak.tanggal,'%d-%m-%Y') as tanggal,antriloketcetak.nomor,antriloketcetak.jam from antriloketcetak where antriloketcetak.tanggal=current_date and antriloketcetak.nomor='"+LabelNomor.getText()+"' ",param);
                this.setCursor(Cursor.getDefaultCursor());
                autonomer();
            }else{
                autonomer();
                if(Sequel.menyimpantf("antriloketcetak","current_date(),current_time(),'"+LabelNomor.getText()+"'","Nomor Antrian")==true){
                    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    Map<String, Object> param = new HashMap<>();
                    param.put("namars",akses.getnamars());
                    param.put("alamatrs",akses.getalamatrs());
                    param.put("kotars",akses.getkabupatenrs());
                    param.put("propinsirs",akses.getpropinsirs());
                    param.put("kontakrs",akses.getkontakrs());
                    param.put("emailrs",akses.getemailrs());
                    Valid.MyReportqry("rptAntriLoket.jasper","report","::[ Antrian Loket ]::",
                           "select date_format(antriloketcetak.tanggal,'%d-%m-%Y') as tanggal,antriloketcetak.nomor,antriloketcetak.jam from antriloketcetak where antriloketcetak.tanggal=current_date and antriloketcetak.nomor='"+LabelNomor.getText()+"' ",param);
                    this.setCursor(Cursor.getDefaultCursor());
                    autonomer();
                }
            }
        }
    }//GEN-LAST:event_BtnCetak2ActionPerformed

    private void BtnCetak3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCetak3ActionPerformed
     dispose();  
    }//GEN-LAST:event_BtnCetak3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Antrian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnCetak2;
    private widget.Button BtnCetak3;
    private widget.Label LabelNomor;
    private widget.Label LabelTanggal;
    private widget.InternalFrame internalFrame1;
    // End of variables declaration//GEN-END:variables
   private void jam(){
        ActionListener taskPerformer = new ActionListener(){
            private int nilai_jam;
            private int nilai_menit;
            private int nilai_detik;
            public void actionPerformed(ActionEvent e) {
                String nol_jam = "";
                String nol_menit = "";
                String nol_detik = "";
                Date now = Calendar.getInstance().getTime();
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");  
                LocalDateTime sekarang = LocalDateTime.now();  
                LabelTanggal.setText("Antrian Loket Pendaftaran Tanggal : "+dtf.format(sekarang)); 
                // Mengambil nilaj JAM, MENIT, dan DETIK Sekarang
                nilai_jam = now.getHours();
                nilai_menit = now.getMinutes();
                nilai_detik = now.getSeconds();
                // Jika nilai JAM lebih kecil dari 10 (hanya 1 digit)
                if (nilai_jam <= 9) {
                    // Tambahkan "0" didepannya
                    nol_jam = "0";
                }
                // Jika nilai MENIT lebih kecil dari 10 (hanya 1 digit)
                if (nilai_menit <= 9) {
                    // Tambahkan "0" didepannya
                    nol_menit = "0";
                }
                // Jika nilai DETIK lebih kecil dari 10 (hanya 1 digit)
                if (nilai_detik <= 9) {
                    // Tambahkan "0" didepannya
                    nol_detik = "0";
                }
                // Membuat String JAM, MENIT, DETIK
                String jam = nol_jam + Integer.toString(nilai_jam);
                String menit = nol_menit + Integer.toString(nilai_menit);
                String detik = nol_detik + Integer.toString(nilai_detik);
                if(menit.equals("01")&&detik.equals("01")){
                    autonomer();
                }
            }
        };
        // Timer
        new Timer(1000, taskPerformer).start();
    }
    
    public void autonomer(){
        Valid.autoNomer3("select ifnull(MAX(CONVERT(antriloketcetak.nomor,signed)),0) from antriloketcetak where antriloketcetak.tanggal=current_date()","",3,LabelNomor);
    }

}
